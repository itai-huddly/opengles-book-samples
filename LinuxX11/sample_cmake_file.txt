cmake_minimum_required(VERSION 3.10)

# set the project name
project(Tutorial VERSION 1.0)

# specify the C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)

option(USE_MYMATH "Use tutorial privded math implementation" ON)

# configure a header file to pass some of the CMake settings
# to the sourcee code
configure_file(TutorialConfig.h.in TutorialConfig.h)

if(USE_MYMATH)
    add_subdirectory(MathFunctions)
    list(APPEND EXTRA_LIBS MathFunctions)
endif()

# add the executable
add_executable(Tutorial tutorial.cxx)

target_link_libraries(Tutorial PUBLIC ${EXTRA_LIBS})

# add the binary tree to the search path for include files
# so that we will find TutorialConfig.h
target_include_directories(Tutorial PUBLIC
    "${PROJECT_BINARY_DIR}"
    )

install(TARGETS Tutorial DESTINATION BIN)
install(FILES "${PROJECT_BINARY_DIR}/TutorialConfig.h"
    DESTINATION include
    )


enable_testing()

# does the application run
add_test(NAME Runs COMMAND Tutorial 25)

# does the usage message work?
add_test(NAME Usage COMMAND Tutorial)
set_tests_properties(Usage
    PROPERTIES PASS_REGULAR_EXPRESSION "Usage:.*number"
    )
    
# define a function to simplify adding include tests
function(do_test target arg result)
    add_test(NAME Comp${arg} COMMAND ${target} ${arg})
    set_tests_properties(Comp${arg}
        PROPERTIES PASS_REGULAR_EXPRESSION ${result}
        )    
endfunction(do_test)

# do a bunch of result based tests
do_test(Tutorial 4 "4 is 2")
do_test(Tutorial 9 "9 is 3")
do_test(Tutorial 5 "5 is 2.236")
do_test(Tutorial 7 "7 is 2.645")
do_test(Tutorial 25 "25 is 5")
do_test(Tutorial -25 "-25 is [-nan|nan|0]")
do_test(Tutorial 0.0001 "0.0001 is 0.01")


cmake_minimum_required(VERSION 3.5)

include_directories(include ${CMAKE_BINARY_DIR})

set(PTZ_SRCS Ptz.cpp)

add_library(ptz ${PTZ_SRCS})

set_property(SOURCE "${PTZ_SRCS}" APPEND PROPERTY COMPILE_FLAGS ${FALCON_DEFAULT_FLAGS})

target_include_directories(ptz INTERFACE include)

target_link_libraries(
ptz
boxfish_com
CONAN_PKG::msgpack
CONAN_PKG::falcon-common
)
add_dependencies(ptz boxfishinterface)

if (CMAKE_TESTING_ENABLED)
  falcon_add_test(ptz_test SOURCES test/test_ptzutils.cpp LIBRARIES ptz)
endif()
